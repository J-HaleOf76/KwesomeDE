# =============================================================================
#  General
# =============================================================================
backend = "egl"; # Use OpenGL
glx-no-stencil = true;
# unredir-if-possible = true;
glx-no-rebind-pixmap = true;
# vsync = true;
use-ewmh-active-win = true;
use-damage = true;

# =============================================================================
#  Opacity
# =============================================================================
opacity-rule =
[
    "100:fullscreen",
    "100:class_g = 'awesome' && focused",
    "100:class_g = 'awesome' && !focused",
    "100:class_g = 'linux-wallpaperengine' && focused",
    "100:class_g = 'linux-wallpaperengine' && !focused"
];

# Specify a list of conditions of windows that should never be considered focused.
focus-exclude =
[
    "class_g ?= 'slop'",
    "class_g ?= 'linux-wallpaperengine'",
    "window_type = 'desktop'",
]

# active-opacity = 0.9;
# inactive-opacity = 0.7;
# frame-opacity = 1;

# =============================================================================
#  Shadows
# =============================================================================
shadow-exclude =
[
    "class_g ?= 'slop'",
    "window_type = 'desktop'",
    "class_g ?= 'linux-wallpaperengine'",
    "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'",
]
# clip-shadow-above = [] # Specify a list of conditions of windows that should have no shadow painted over, such as a dock window.
# shadow-exclude-reg = "x10+0+0" # Specify a X geometry that describes the region in which shadow should not be painted in, such as a dock window region. Use
# xinerama-shadow-crop = false # Crop shadow of a window fully on a particular Xinerama screen to the screen.
shadow = false; # Enabled client-side shadows on windows.
detect-rounded-corners = false; # Detect rounded corners (it doesn't really do anything for shadows)
shadow-radius = 12; # The blur radius for shadows. (default 12)
shadow-offset-x = -15; # The left offset for shadows. (default -15)
shadow-offset-y = -15 # The top offset for shadows, in pixels. (defaults to -15)
shadow-opacity = 0.75;  #The translucency for shadows. (default .75)
# shadow-red = 0 # Red color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-green = 0 # Green color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-blue = 0 # Blue color value of shadow (0.0 - 1.0, defaults to 0).
shadow-color = "#000000" # Hex string color value of shadow (#000000 - #FFFFFF, defaults to #000000). This option will override options set shadow-(red/green/blue)

# =============================================================================
#  Fade
# =============================================================================
fade-exclude =
[
    "class_g ?= 'slop'",
    "window_type = 'desktop'",
    "class_g ?= 'linux-wallpaperengine'",
    "class_g ?= 'awesome'"
]
fading = false; # Fade windows during opacity changes.
fade-delta = 10; # The time between steps in a fade in milliseconds. (default 10).
fade-in-step = 0.028; # Opacity change between steps while fading in. (default 0.028).
fade-out-step = 0.03; # Opacity change between steps while fading out. (default 0.03).
no-fading-openclose = false; # Do not fade on window open/close.

# =============================================================================
#  Blur
# =============================================================================
blur-background-exclude =
[
    "class_g ?= 'slop'",
    "window_type = 'desktop'",
    "class_g ?= 'linux-wallpaperengine'",
    "class_g ?= 'Hudkit'",
    "class_g ?= 'kasperde-shell'",
];
blur:
{
    method = "dual_kawase";
    strength = 10;
    background = false;
    background-frame = false;
    background-fixed = false;
}

# =============================================================================
#  Rounded Corners
# =============================================================================
rounded-corners-exclude =
[
    "class_g ?= 'slop'",
    "class_g ?= 'awesome'",
    "window_type = 'desktop'",
    "class_g ?= 'linux-wallpaperengine'"
];
corner-radius = 0;
round-borders = 0;

# =============================================================================
#  Animations
# =============================================================================
# animations = true;
# animation-force-steps = false; # Force animations to go step by step even if cpu usage is high (default: false)"
# animation-delta = 10; # The time between steps in animation, in milliseconds. (defaults: 10).
# animation-clamping = true; # Whether to clamp animations (default: true).
# animation-stiffness = 200.0; # Stiffness (a.k.a. tension) parameter for spring-based animation (default: 200.0).
# animation-dampening = 25.0; # Dampening (a.k.a. friction) parameter for spring-based animation (default: 25.0).
# animation-window-mass = 1.0; #  Mass parameter for spring-based animation (default: 1.0)
# animation-for-open-window = "none" # Which animation to run when showing a window
# animation-for-unmap-window = "none" # Which animation to run when hiding (e.g. minimize) a window
# animation-for-workspace-switch-in = "none" # Which animation to run on switching workspace for windows comming into view.
# animation-for-workspace-switch-out = "none" # Which animation to run on switching workspace for windows going out of view.
# wintypes:
# {
#     menu = { animation = "zoom"; animation-unmap = "zoom"; }
#     dock = { animation = "slide-left"; animation-unmap = "slide-right"; }
#     splash = { animation = "zoom"; animation-unmap = "zoom"; }
#     notification =  { animation = "zoom"; animation-unmap = "zoom"; }
# };

animations = (
    {
        triggers = [ "open", "show" ];
        preset = "slide-in";
        direction = "right";
        duration = 0.2;
    },
    {
        triggers = [ "close", "hide" ];
        preset = "slide-out";
        direction = "down";
        duration = 0.2;
    },
    {
        triggers = [ "geometry" ];
        preset = "geometry-change";
        duration = 0.2;
    },
)
